/**
 * This class is generated by jOOQ
 */
package net.phobot.realestate.model.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.1.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CertifiedChecks extends org.jooq.impl.TableImpl<net.phobot.realestate.model.tables.records.CertifiedChecksRecord> {

	private static final long serialVersionUID = -1254953425;

	/**
	 * The singleton instance of <code>PUBLIC.CERTIFIED_CHECKS</code>
	 */
	public static final net.phobot.realestate.model.tables.CertifiedChecks CERTIFIED_CHECKS = new net.phobot.realestate.model.tables.CertifiedChecks();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<net.phobot.realestate.model.tables.records.CertifiedChecksRecord> getRecordType() {
		return net.phobot.realestate.model.tables.records.CertifiedChecksRecord.class;
	}

	/**
	 * The column <code>PUBLIC.CERTIFIED_CHECKS.ID</code>. 
	 */
	public final org.jooq.TableField<net.phobot.realestate.model.tables.records.CertifiedChecksRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>PUBLIC.CERTIFIED_CHECKS.AMOUNT</code>. 
	 */
	public final org.jooq.TableField<net.phobot.realestate.model.tables.records.CertifiedChecksRecord, java.math.BigDecimal> AMOUNT = createField("AMOUNT", org.jooq.impl.SQLDataType.DECIMAL.precision(65535, 32767), this);

	/**
	 * The column <code>PUBLIC.CERTIFIED_CHECKS.PAYABLE_TO</code>. 
	 */
	public final org.jooq.TableField<net.phobot.realestate.model.tables.records.CertifiedChecksRecord, java.lang.Long> PAYABLE_TO = createField("PAYABLE_TO", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>PUBLIC.CERTIFIED_CHECKS.BELONGS_TO</code>. 
	 */
	public final org.jooq.TableField<net.phobot.realestate.model.tables.records.CertifiedChecksRecord, java.lang.Long> BELONGS_TO = createField("BELONGS_TO", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>PUBLIC.CERTIFIED_CHECKS.IN_POSSESSION_OF</code>. 
	 */
	public final org.jooq.TableField<net.phobot.realestate.model.tables.records.CertifiedChecksRecord, java.lang.Long> IN_POSSESSION_OF = createField("IN_POSSESSION_OF", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>PUBLIC.CERTIFIED_CHECKS.PURCHASE_ID</code>. 
	 */
	public final org.jooq.TableField<net.phobot.realestate.model.tables.records.CertifiedChecksRecord, java.lang.Long> PURCHASE_ID = createField("PURCHASE_ID", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * Create a <code>PUBLIC.CERTIFIED_CHECKS</code> table reference
	 */
	public CertifiedChecks() {
		super("CERTIFIED_CHECKS", net.phobot.realestate.model.Public.PUBLIC);
	}

	/**
	 * Create an aliased <code>PUBLIC.CERTIFIED_CHECKS</code> table reference
	 */
	public CertifiedChecks(java.lang.String alias) {
		super(alias, net.phobot.realestate.model.Public.PUBLIC, net.phobot.realestate.model.tables.CertifiedChecks.CERTIFIED_CHECKS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<net.phobot.realestate.model.tables.records.CertifiedChecksRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<net.phobot.realestate.model.tables.records.CertifiedChecksRecord, ?>>asList(net.phobot.realestate.model.Keys.CONSTRAINT_14, net.phobot.realestate.model.Keys.CONSTRAINT_149, net.phobot.realestate.model.Keys.CONSTRAINT_1499);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public net.phobot.realestate.model.tables.CertifiedChecks as(java.lang.String alias) {
		return new net.phobot.realestate.model.tables.CertifiedChecks(alias);
	}
}
